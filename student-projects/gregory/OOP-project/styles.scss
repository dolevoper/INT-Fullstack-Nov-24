:root{
    --fieldSize : 50rem;
    --startButtonHeight : 2.5rem;
    --startButtonwidth : 6.5rem;
    --pieceHeight: 4.75rem;

}


*, *::before, *::after {
    box-sizing: border-box;
}

* {
    margin: 0;
    // border: 0;
    padding: 0;
}

li {
    list-style: none;   
}

// *** COMPOSITION ***
// *** UTILITIES ***
.u-statsText{
    font-size: var(--statsTextSize,1.5rem);
    // color: red;
    //font-weight: var(--statsTextWeight,600);
}
.u-statsItem{
    display: flex;
    justify-content: space-between;
    margin-left: 1rem;
    margin-right: 1rem;
}

.u-redText{
    color: red;
}

.u-text-32{
    font-size: 2rem;
}

.u-Red{
    background-color: red;
}

.u-Black{
    background-color: black;
}

.u-Green{
    background-color: green;
}

.u-center{
    text-align: center;
}

.u-leftMargin-16{
    margin-left: 1rem;
}

.u-rightMargin-16{
    margin-right: 1rem;
}
// *** BLOCKS ***
main{
    
    display: flex;
    justify-content: space-around;
}
.stats{
    height: 7.5rem;
    width: 15rem;
    border: 1px solid black;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

.score{
    height: 2.5rem;
    width: 15rem;
    border: 1px solid black;
    display: flex;
    justify-content: space-between;       
}

.gameField{
    position: relative;

    width: var(--fieldSize,40rem);
    height: var(--fieldSize,40rem);
    display: grid;
    grid-template-columns: repeat(10, 1fr); 
    grid-template-rows: repeat(10, 1fr); 
    gap: 2px; 
    border: 3px solid black;
}

.sideBlock{
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
}

.gamePiece{
    height: var(--pieceHeight,4rem);
    width: auto;
    // border: 1px solid green;
}

.bottle{
    display: flex;
    justify-content: center;
    align-items: center; 
}

.benderB{
    grid-column: 10;
    grid-row: 10;
    
    
    // border: 1px solid red;

    display: flex;
    justify-content: center;
    align-items: center;
   
}

.rules{
    margin-top: 2rem;
    width: 30rem;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;

}

.startButton{
    position: absolute;
    top: calc(var(--fieldSize) + 1rem); 
    left: calc(50% - var(--startButtonwidth) / 2);
    height: var(--startButtonHeight,1.5rem);
    width: var(--startButtonwidth,5.5rem);
    font-size: var(--statsTextSize,1.5rem);
    // border-radius: 0.5rem;
    // border: 2px solid gray;
    
    background-color: #B0B0B0;  // Button color
    //color: white;
    //padding: 15px 32px;
    text-align: center;
    //text-decoration: none;
    display: inline-block;
    //font-size: 16px;
    border: none;
    border-radius: 5px;
    //cursor: pointer;
    //position: relative;
    box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.2), 0px 8px 15px rgba(0, 0, 0, 0.3);  // Shadow to simulate 3D volume
    transition: box-shadow 0.2s ease, background-color 0.2s ease;  // Smooth transition for hover effect

    // Adding a slight gradient to simulate light
    background: linear-gradient(145deg, #B0B0B0, #8A8A8A);
    &:hover {
        background: linear-gradient(145deg, #8A8A8A, #B0B0B0);  // Slightly change gradient on hover
        box-shadow: inset 2px 2px 4px rgba(0, 0, 0, 0.3), 0px 12px 20px rgba(0, 0, 0, 0.4);  // Enhanced shadow on hover
    }
    
      // Focus effect (when clicked or focused)
    &:focus {
        outline: none;  // Remove default focus outline
        box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.3), 0px 6px 10px rgba(0, 0, 0, 0.5);  // Slight shadow change on focus
    }

    

}
// *** EXCEPTIONS ***